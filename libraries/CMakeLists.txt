aux_source_directory(${CMAKE_CURRENT_SOURCE_DIR}/lame/libmp3lame LAME_SOURCE_LIB)
aux_source_directory(${CMAKE_CURRENT_SOURCE_DIR}/lame/libmp3lame/vector/ LAME_SOURCE_LIB)
aux_source_directory(${CMAKE_CURRENT_SOURCE_DIR}/lame/mpglib LAME_SOURCE_LIB)

if(${CMAKE_SYSTEM_NAME} MATCHES "Darwin" AND NOT IOS AND NOT ANDROID)
  set(lame_CONFIG_FILE ${CMAKE_CURRENT_BINARY_DIR}/lame/config.h)
  #configure_file(${CMAKE_CURRENT_SOURCE_DIR}/lame/config.h.in ${lame_CONFIG_FILE})
  add_library(mp3lame SHARED ${LAME_SOURCE_LIB})
  target_compile_definitions(mp3lame PRIVATE HAVE_STDINT_H=1 HAVE_MPGLIB=1 DECODE_ON_THE_FLY=1 USE_FAST_LOG=1 TAKEHIRO_IEEE754_HACK=1 HAVE_MEMCPY=1)
  target_include_directories(mp3lame PRIVATE "${CMAKE_CURRENT_SOURCE_DIR}/lame/libmp3lame" "${CMAKE_CURRENT_SOURCE_DIR}/lame/mpglib" "${CMAKE_CURRENT_SOURCE_DIR}/lame")
  target_include_directories(mp3lame PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}/lame/include")
  target_precompile_headers(mp3lame PRIVATE lame.pch.h)
  target_compile_options(mp3lame PRIVATE "-Wno-absolute-value" "-Wno-shift-negative-value" "-Wno-tautological-pointer-compare")
  set_target_properties(mp3lame PROPERTIES LIBRARY_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/lame")
endif()
